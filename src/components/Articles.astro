---
import fetch from 'node-fetch';
import type { OgpData } from '../types';
import { articleUrls } from '../data/articles';

async function getOgp() { 
  const ogps: OgpData[] = [];
  for (const url of articleUrls) {
    try {
      const res = await fetch(url);
      const html = await res.text();
      const ogTitleMatch = html.match(/<meta[^>]*property=["']og:title["'][^>]*content=["']([^"']*?)["'][^>]*>/i);
      const ogDescMatch = html.match(/<meta[^>]*property=["']og:description["'][^>]*content=["']([^"']*?)["'][^>]*>/i);
      const ogImageMatch = html.match(/<meta[^>]*property=["']og:image["'][^>]*content=["']([^"']*?)["'][^>]*>/i);
      const ogp: OgpData = {
        'og:title': ogTitleMatch?.[1] || 'Article',
        'og:description': ogDescMatch?.[1] || null,
        'og:url': url,
        'og:image': ogImageMatch?.[1] || null
      };
      ogps.push(ogp);
    } catch (error) {
      ogps.push({
        'og:title': 'Article',
        'og:description': 'External article',
        'og:url': url,
        'og:image': null
      });
    }
  };
  return ogps;
};
const ogps = await getOgp();
---

<div id="articles" class="container justify-center w-full flex flex-col items-center">
  <div class="w-full text-center">
    <h2 class="text-3xl my-4 font-bold text-gray-900 leading-tight mb-2 border-t-4 border-b-4 border-gray-600 py-4">Articles</h2>
    <div>
      <div class="grid lg:grid-cols-3 gap-4 md:grid-cols-2 grid-cols-1">
        { ogps.map((ogp) => 
          <div class="bg-white p-4 rounded-lg shadow-md">
          <a href={ogp['og:url']} class="hover:shadow-lg" target="_blank" rel="noopener noreferrer">
            <div class="text-center justify-center flex flex-col">
              <img src={ogp['og:image']} class="h-24 mx-auto">
              <h3 class="text-md font-semibold mt-2">{ ogp['og:title'] }</h3>
            </div>
            <p class="mt-4 text-sm wrap-normal">{ ogp['og:description'] }</p>
          </a>
          </div>
          )
        }
      </div>
    </div>
  </div>
</div>
